basePath: /
definitions:
  ChannelCreateReq:
    properties:
      channel_owner:
        $ref: '#/definitions/channel.ChannelUser'
      group_channel:
        type: boolean
      name:
        maxLength: 100
        minLength: 2
        type: string
      users:
        items:
          $ref: '#/definitions/channel.ChannelUser'
        type: array
    required:
    - channel_owner
    - group_channel
    - users
    type: object
  ChannelIDs:
    properties:
      channel_ids:
        items:
          type: string
        type: array
    type: object
  ChannelUpdateReq:
    properties:
      name:
        maxLength: 100
        minLength: 2
        type: string
    type: object
  ChatReq:
    properties:
      channel_ids:
        items:
          type: string
        type: array
      user_id:
        type: string
    required:
    - user_id
    type: object
  Chats:
    properties:
      chats:
        items:
          $ref: '#/definitions/handler.Chat'
        type: array
    type: object
  CreateResponse:
    properties:
      id:
        type: string
    type: object
  DeleteResponse:
    properties:
      is_deleted:
        type: boolean
    type: object
  Error:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  MessageCreateReq:
    properties:
      attachment_url:
        type: string
      channel_id:
        type: string
      seen_user_ids:
        items:
          type: string
        type: array
      text_content:
        type: string
      user_id:
        type: string
    required:
    - channel_id
    - text_content
    - user_id
    type: object
  MessageUpdateReq:
    properties:
      attachment_url:
        type: string
      text_content:
        type: string
    type: object
  OrgCreateReq:
    properties:
      avatar_url:
        type: string
      departments:
        items:
          $ref: '#/definitions/org.Department'
        type: array
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      website:
        type: string
    required:
    - email
    - name
    type: object
  OrgUpdateReq:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      website:
        type: string
    type: object
  TokenPair:
    properties:
      idToken:
        type: string
      refreshToken:
        type: string
    type: object
  UpdateResponse:
    properties:
      is_updated:
        type: boolean
    type: object
  User:
    properties:
      active_status:
        type: boolean
      avatar_url:
        type: string
      dept_id:
        type: string
      email:
        type: string
      first_name:
        type: string
      group_id:
        type: string
      last_name:
        type: string
      org_id:
        type: string
      priv_channel_ids:
        items:
          type: string
        type: array
      pub_channel_ids:
        items:
          type: string
        type: array
      role:
        type: string
      user_id:
        type: string
    required:
    - email
    - first_name
    - last_name
    type: object
  UserUpdateReq:
    properties:
      active_status:
        type: boolean
      avatar_url:
        type: string
      dept_id:
        type: string
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 2
        type: string
      group_id:
        type: string
      last_name:
        maxLength: 100
        minLength: 2
        type: string
      org_id:
        type: string
      role:
        type: string
    type: object
  channel.ChannelUser:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  handler.Chat:
    properties:
      channel_id:
        type: string
      messages:
        items:
          $ref: '#/definitions/handler.ChatMessage'
        type: array
      user_ids:
        items:
          type: string
        type: array
      users:
        additionalProperties:
          $ref: '#/definitions/handler.ChatUser'
        type: object
    type: object
  handler.ChatMessage:
    properties:
      attachment_url:
        type: string
      channel_id:
        type: string
      msg_id:
        type: string
      text_content:
        type: string
      user_id:
        type: string
    type: object
  handler.ChatUser:
    properties:
      active_status:
        type: boolean
      avatar_url:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      role:
        type: string
    type: object
  model.Channel:
    properties:
      channel_id:
        type: string
      channel_owner:
        $ref: '#/definitions/model.ChannelUser'
      group_channel:
        type: boolean
      name:
        type: string
      users:
        items:
          $ref: '#/definitions/model.ChannelUser'
        type: array
    type: object
  model.ChannelUser:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  model.Department:
    properties:
      groups:
        items:
          $ref: '#/definitions/model.Group'
        type: array
      id:
        type: string
      name:
        type: string
    type: object
  model.Group:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  model.Message:
    properties:
      attachment_url:
        type: string
      channel_id:
        type: string
      msg_id:
        type: string
      seen_user_ids:
        items:
          type: string
        type: array
      text_content:
        type: string
      user_id:
        type: string
    type: object
  model.Org:
    properties:
      avatar_url:
        type: string
      departments:
        items:
          $ref: '#/definitions/model.Department'
        type: array
      email:
        type: string
      name:
        type: string
      org_id:
        type: string
      website:
        type: string
    type: object
  org.Department:
    properties:
      groups:
        items:
          $ref: '#/definitions/org.Group'
        type: array
      id:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - name
    type: object
  org.Group:
    properties:
      id:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - name
    type: object
  signinReq:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  signupReq:
    properties:
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 2
        type: string
      last_name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
      role:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - role
    type: object
  tokensReq:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
host: localhost:5000
info:
  contact:
    email: saravanakumar323py@gmail.com
    name: Saravanakumar Selvam
    url: http://www.swagger.io/support
  description: This is chat application server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Primz Chat
  version: "1.0"
paths:
  /api/auth/me:
    get:
      description: get user detail based on user id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: Show user detail
      tags:
      - auth
  /api/auth/signin:
    post:
      consumes:
      - application/json
      description: signin chat application
      parameters:
      - description: Signin Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/signinReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: signin chat application
      tags:
      - auth
  /api/auth/signout:
    post:
      description: signout chat application
      responses:
        "200":
          description: user signed out successfully!
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: signout chat application
      tags:
      - auth
  /api/auth/signup:
    post:
      consumes:
      - application/json
      description: signup chat application
      parameters:
      - description: Signup Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/signupReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: signup chat application
      tags:
      - auth
  /api/auth/tokens:
    post:
      consumes:
      - application/json
      description: Generate idToken and refreshToken
      parameters:
      - description: Tokens Payload
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/tokensReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      summary: Generate tokens pair
      tags:
      - auth
  /api/auth/user/{user_id}:
    delete:
      description: Delete user detail based on user id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: delete user detail based on user id
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update user detail based on user id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: User Detail
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/UserUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: update user detail based on user id
      tags:
      - auth
  /api/auth/users:
    get:
      description: Get all user details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get all user details
      tags:
      - auth
  /api/auth/users/search:
    get:
      description: Get users detail based on search query
      parameters:
      - description: Organization ID
        in: query
        name: org_id
        type: string
      - description: Department ID
        in: query
        name: dept_id
        type: string
      - description: Group ID
        in: query
        name: group_id
        type: string
      - description: Name filter
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get users detail based on search query
      tags:
      - auth
  /api/channel/:
    post:
      consumes:
      - application/json
      description: Create new channel
      parameters:
      - description: Channel Detail
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/ChannelCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: create new channel
      tags:
      - channel
  /api/channel/{channel_id}:
    delete:
      description: Delete channel detail based on channel id
      parameters:
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: delete channel detail based on channel id
      tags:
      - channel
    get:
      description: Get channel detail based on channel id
      parameters:
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Channel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get channel detail based on channel id
      tags:
      - channel
    put:
      consumes:
      - application/json
      description: Update channel detail based on channel id
      parameters:
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        type: string
      - description: Channel Detail
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/ChannelUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: update channel detail based on channel id
      tags:
      - channel
  /api/channels:
    post:
      description: Get channels details based on channel id's
      parameters:
      - description: Channel ID's
        in: body
        name: channel_id's
        required: true
        schema:
          $ref: '#/definitions/ChannelIDs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Channel'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get channels details based on channel id's
      tags:
      - channel
  /api/chat:
    post:
      description: Get chat details based on channel id's
      parameters:
      - description: Chat Request
        in: body
        name: chat_req
        required: true
        schema:
          $ref: '#/definitions/ChatReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Chats'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get chat details based on channel id's
      tags:
      - chat
  /api/message/:
    post:
      consumes:
      - application/json
      description: Create new message
      parameters:
      - description: Message Detail
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/MessageCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: create new message
      tags:
      - message
  /api/message/{msg_id}:
    delete:
      description: Delete message detail based on msg id
      parameters:
      - description: Message ID
        in: path
        name: msg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: delete message detail based on msg id
      tags:
      - message
    get:
      description: Get message detail based on message id
      parameters:
      - description: Message ID
        in: path
        name: msg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get message detail based on message id
      tags:
      - message
    put:
      consumes:
      - application/json
      description: Update message detail based on message id
      parameters:
      - description: Message ID
        in: path
        name: msg_id
        required: true
        type: string
      - description: Message Detail
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/MessageUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: update message detail based on message id
      tags:
      - message
  /api/messages/{channel_id}:
    get:
      description: Get messages based on channel id
      parameters:
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Channel'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get messages based on channel id
      tags:
      - message
  /api/org/:
    post:
      consumes:
      - application/json
      description: Create new organization
      parameters:
      - description: Organization Detail
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/OrgCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: create new organization
      tags:
      - orgs
  /api/org/{org_id}:
    delete:
      description: Delete organization detail based on org id
      parameters:
      - description: Org ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: delete organization detail based on org id
      tags:
      - orgs
    get:
      description: Get organization detail based on org id
      parameters:
      - description: Org ID
        in: path
        name: org_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Org'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get organization detail based on org id
      tags:
      - orgs
  /api/orgs:
    get:
      description: Get all organization details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Org'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: get all organization details
      tags:
      - orgs
  /api/orgs/{org_id}:
    put:
      consumes:
      - application/json
      description: Update organization detail based on org id
      parameters:
      - description: Org ID
        in: path
        name: org_id
        required: true
        type: string
      - description: Organization Detail
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/OrgUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        "415":
          description: Unsupported Media Type
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      summary: update organization detail based on org id
      tags:
      - orgs
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
